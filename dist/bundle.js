/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/conponents/tableItem.js":
/*!*********************************************!*\
  !*** ./src/scripts/conponents/tableItem.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TableItem: () => (/* binding */ TableItem),\n/* harmony export */   tableTitleHTML: () => (/* binding */ tableTitleHTML)\n/* harmony export */ });\nconst TableItem = (item) => {\r\n  const date = new Date(item.createdAt * 1000);\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const formattedDate = `${year}/${month}/${day}`;\r\n\r\n  return `\r\n    <tr data-id=${item.id}>\r\n    <td class=\"p-2 md:px-4 md:py-3 border border-black\">\r\n        ${item.createdAt}\r\n    </td>\r\n    <td class=\"p-2 md:px-4 md:py-3 border border-black\">\r\n        ${item.user.name}<br />${item.user.tel}\r\n    </td>\r\n    <td class=\"p-2 md:px-4 md:py-3 border border-black\">\r\n        ${item.user.address}\r\n    </td>\r\n    <td class=\"p-2 md:px-4 md:py-3 border border-black\">\r\n        ${item.user.email}\r\n    </td>\r\n    <td class=\"p-2 md:px-4 md:py-3 border border-black\">\r\n        ${item.products.map((item) => `${item.title}<br/>`).join(\"\")}\r\n    </td>\r\n    <td class=\"p-2 md:px-4 md:py-3 border border-black\">\r\n        ${formattedDate}\r\n    </td>\r\n    <td class=\"p-2 md:px-4 md:py-3 border border-black\">\r\n    <button class=\"btn-order-toggle text-[#0067CE] underline\" type=\"button\">\r\n        ${item.paid ? \"已處理\" : \"未處理\"}\r\n    </button>\r\n    </td>\r\n    <td class=\"px-1 py-2 border border-black\">\r\n    <button\r\n        class=\"btn-order-delete w-full py-1 bg-[#C44021] text-white hover:bg-[#9D3F28] duration-300\"\r\n        type=\"button\"\r\n    >\r\n        刪除\r\n    </button>\r\n    </td>\r\n    </tr>`;\r\n};\r\n\r\nconst tableTitleHTML = `\r\n  <tr>\r\n    <th class=\"p-2 md:px-4 md:py-3 border border-black whitespace-nowrap\">\r\n      訂單編號\r\n    </th>\r\n    <th class=\"p-2 md:px-4 md:py-3 border border-black whitespace-nowrap\">\r\n        聯絡人\r\n    </th>\r\n    <th class=\"p-2 md:px-4 md:py-3 border border-black whitespace-nowrap\">\r\n        聯絡地址\r\n    </th>\r\n    <th class=\"p-2 md:px-4 md:py-3 border border-black whitespace-nowrap\">\r\n        電子郵件\r\n    </th>\r\n    <th class=\"p-2 md:px-4 md:py-3 border border-black whitespace-nowrap\">\r\n        訂單品項\r\n    </th>\r\n    <th class=\"p-2 md:px-4 md:py-3 border border-black whitespace-nowrap\">\r\n        訂單日期\r\n    </th>\r\n    <th class=\"p-2 md:px-4 md:py-3 border border-black whitespace-nowrap\">\r\n        訂單狀態\r\n    </th>\r\n    <th class=\"p-2 md:px-4 md:py-3 border border-black whitespace-nowrap\">\r\n        操作\r\n    </th>\r\n  </tr>`;\r\n\n\n//# sourceURL=webpack://js-final/./src/scripts/conponents/tableItem.js?");

/***/ }),

/***/ "./src/scripts/controllers/cartController.js":
/*!***************************************************!*\
  !*** ./src/scripts/controllers/cartController.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartData: () => (/* binding */ cartData),\n/* harmony export */   emptyCartblock: () => (/* binding */ emptyCartblock),\n/* harmony export */   getCartListApi: () => (/* binding */ getCartListApi),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   productSelectHandler: () => (/* binding */ productSelectHandler)\n/* harmony export */ });\nconst apiPath = \"rocket14\";\r\n\r\n//建立baseURL\r\nconst cartBase = axios.create({\r\n  baseURL: `${\"https://livejs-api.hexschool.io/api/livejs/v1\"}/customer/`,\r\n});\r\n\r\n//取得產品列表\r\nconst apiProductList = () => cartBase.get(`${apiPath}/products`);\r\n\r\n// 取得購物車列表\r\nconst apiCartList = () => cartBase.get(`${apiPath}/carts`);\r\n\r\n// 加入購物車\r\nconst apiaddCart = (data) => cartBase.post(`${apiPath}/carts`, data);\r\n\r\n// 刪除購物車內特定產品\r\nconst apideleteCartItem = (id) => cartBase.delete(`${apiPath}/carts/${id}`);\r\n\r\n// 清除購物車內全部產品\r\nconst apideleteAllCart = () => cartBase.delete(`${apiPath}/carts`);\r\n\r\n//編輯購物車產品數量\r\nconst apieditCartNum = (data) => cartBase.patch(`${apiPath}/carts`, data);\r\n\r\nconst productList = document.querySelector(\".productList\"); //產品列表\r\nconst productSelect = document.querySelector(\".productSelect\"); //產品篩選\r\nconst cartList = document.querySelector(\".cartList\"); //購物車列表\r\nconst deleteAllBtn = document.querySelector(\".deleteAllBtn\"); //刪除全部品項按鈕\r\n\r\nlet product = []; //存放商品內容\r\nlet cartData = []; //存放購物車列表內容\r\n\r\n//初始化\r\nfunction init() {\r\n  getProductList();\r\n  getCartListApi();\r\n}\r\n// 取得產品列表api\r\nconst getProductList = () => {\r\n  apiProductList()\r\n    .then((res) => {\r\n      product = res.data.products;\r\n      renderProductData(product);\r\n    })\r\n    .catch((err) => {\r\n      errorAlert(err);\r\n    });\r\n};\r\n\r\n// 取得產品列表\r\nfunction renderProductData(data) {\r\n  productList.innerHTML = data\r\n    .map(\r\n      (item) => `\r\n    <li class=\"col-span-12 md:col-span-6 lg:col-span-3 relative\">\r\n      <div class=\"bg-black text-white text-xl w-[88px] py-2 text-center absolute top-3 -right-1\">新品</div>\r\n      <img src=\"${item.images}\" alt=\"${\r\n        item.title\r\n      }\" class=\"w-full h-[302px] object-cover\">\r\n      <button type=\"button\" class=\"addbtn bg-black text-white w-full text-center hover:bg-primary py-2 mb-2\" data-id=\"${\r\n        item.id\r\n      }\">加入購物車</button>\r\n      <h3 class=\"text-xl mb-2\">${item.title}</h3>\r\n      <span class=\"text-xl line-through\">NT$${money(item.origin_price)}</span>\r\n      <p class=\"text-[28px]\">NT$${money(item.price)}</p>\r\n    </li>`\r\n    )\r\n    .join(\"\");\r\n}\r\n\r\n// 取得購物車列表api\r\nconst getCartListApi = () => {\r\n  apiCartList()\r\n    .then((res) => {\r\n      cartData = res.data.carts;\r\n      emptyCartblock(); //檢查購物是否為空\r\n      renderCartList();\r\n      totalAmount(res.data.finalTotal); //顯示總金額\r\n    })\r\n    .catch((err) => {\r\n      errorAlert(err);\r\n    });\r\n};\r\n\r\n// 加入購物車api\r\nconst addCartApi = (id) => {\r\n  let cartID = {\r\n    data: {\r\n      productId: id,\r\n      quantity: 1,\r\n    },\r\n  };\r\n  apiaddCart(cartID)\r\n    .then((res) => {\r\n      getCartListApi();\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: `新增成功`,\r\n        text: \"請至購物車查看\",\r\n        showConfirmButton: false,\r\n        timer: 1000,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      errorAlert(err);\r\n    });\r\n};\r\n\r\n// 刪除購物車內特定產品api\r\nconst deleteCartItemApi = (id) => {\r\n  apideleteCartItem(id)\r\n    .then((res) => {\r\n      getCartListApi();\r\n      Toast.fire({\r\n        icon: \"success\",\r\n        title: `成功刪除囉`,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      errorAlert(err);\r\n    });\r\n};\r\n\r\n// 刪除購物車內全部產品api\r\nconst deleteAllCartApi = () => {\r\n  Swal.fire({\r\n    title: \"你確定要刪除全部品項?\",\r\n    text: \"刪除後購物車就沒有產品了！！\",\r\n    icon: \"warning\",\r\n    showCancelButton: true,\r\n    confirmButtonColor: \"#3085d6\",\r\n    cancelButtonColor: \"#d33\",\r\n    confirmButtonText: \"刪除囉\",\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      apideleteAllCart()\r\n        .then((res) => {\r\n          Toast.fire({\r\n            icon: \"success\",\r\n            title: `${res.data.message}`,\r\n          });\r\n          getCartListApi();\r\n        })\r\n        .catch((err) => {\r\n          errorAlert(err);\r\n        });\r\n    }\r\n  });\r\n};\r\n\r\n//編輯購物車產品數量api\r\nconst editCartNumApi = (id, num) => {\r\n  let cartID = {\r\n    data: {\r\n      id,\r\n      quantity: num * 1,\r\n    },\r\n  };\r\n  apieditCartNum(cartID)\r\n    .then((res) => {\r\n      getCartListApi();\r\n    })\r\n    .catch((err) => {\r\n      errorAlert(err);\r\n    });\r\n};\r\n\r\n//加入購物車\r\nfunction addCartItem(e) {\r\n  if (cartData.some((item) => item.product.id === e.target.dataset.id)) {\r\n    let { id, quantity } = cartData.find(\r\n      (item) => item.product.id === e.target.dataset.id\r\n    );\r\n    editCartNumApi(id, quantity + 1);\r\n    Swal.fire({\r\n      icon: \"success\",\r\n      title: `新增成功`,\r\n      text: \"請至購物車查看\",\r\n      showConfirmButton: false,\r\n      timer: 1000,\r\n    });\r\n  } else if (e.target.className.includes(\"addbtn\")) {\r\n    addCartApi(e.target.dataset.id);\r\n  }\r\n}\r\n\r\n// 取得購物車列表\r\nfunction renderCartList() {\r\n  cartList.innerHTML = cartData\r\n    .map(\r\n      (item) => `\r\n      <ol class=\"grid grid-cols-4 md:grid-cols-8 xl:grid-cols-10 gap-x-[15px] xl:gap-x-[30px] items-center pb-5 mb-5 border-b border-gray-400 gap-y-3\">\r\n      <li class=\"col-span-full md:col-span-3 flex items-center gap-x-[15px]\">\r\n        <div class=\"w-20 h-20 flex-shrink-0\">\r\n          <img src=\"${\r\n            item.product.images\r\n          }\" class=\"w-full h-full object-cover\" alt=\"${\r\n        item.product.title\r\n      }\" /></div>\r\n        <p class=>${item.product.title}</p>\r\n      </li>\r\n      <li class=\"col-span-2\">\r\n        <span class=\"mr-2 md:hidden\">單價</span>NT$${money(item.product.price)}\r\n      </li>\r\n      <li class=\"xl:col-span-2 text-right md:text-left\">\r\n        <button type=\"button\"><i class=\"fa-solid fa-plus add\" data-id=\"${\r\n          item.id\r\n        }\" data-num=\"${item.quantity + 1}\"></i></button>\r\n        <span class=\"mx-1\">${item.quantity}</span>\r\n        <button type=\"button\"><i class=\"fa-solid fa-minus remove\" data-id=\"${\r\n          item.id\r\n        }\" data-num=\"${item.quantity - 1}\"></i></button>\r\n\r\n      </li>\r\n      <li class=\"hidden md:block xl:col-span-2\">\r\n        <span class=\"md:hidden\">金額</span>NT$${money(\r\n          item.product.price * item.quantity\r\n        )}\r\n      </li>\r\n      <li class=\"flex items-center justify-end xl:justify-start\">\r\n        <button type=\"button\" >\r\n          <i class=\"fa-solid fa-x delSingleBtn\" data-id=\"${item.id}\"></i>\r\n        </button>\r\n      </li>\r\n    </ol>\r\n    `\r\n    )\r\n    .join(\"\");\r\n  removeBtnHandler();\r\n}\r\n\r\n//檢查購物車是否空的\r\nfunction emptyCartblock() {\r\n  if (!cartData.length) {\r\n    document.querySelector(\"#emptyCart\").classList.remove(\"hidden\");\r\n    document.querySelector(\"#btnAmount\").classList.add(\"hidden\");\r\n  } else {\r\n    document.querySelector(\"#emptyCart\").classList.add(\"hidden\");\r\n    document.querySelector(\"#btnAmount\").classList.remove(\"hidden\"); // 顯示刪除按鈕及總金額\r\n    document.querySelector(\"#btnAmount\").classList.add(\"grid\");\r\n  }\r\n}\r\n\r\n// 刪除或調整購物車內特定產品\r\nfunction cartHandler(e) {\r\n  e.preventDefault();\r\n  if (e.target.className.includes(\"delSingleBtn\")) {\r\n    Swal.fire({\r\n      title: \"你確定要刪除該品項?\",\r\n      text: \"刪除就不能再反悔了！！\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"刪除囉\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteCartItemApi(e.target.dataset.id);\r\n      }\r\n    });\r\n  }\r\n  if (\r\n    e.target.className.includes(\"add\") ||\r\n    e.target.className.includes(\"remove\")\r\n  ) {\r\n    disabledBtn(e.target.parentElement);\r\n    editCartNumApi(e.target.dataset.id, e.target.dataset.num);\r\n    setTimeout(() => {\r\n      Toast.fire({\r\n        icon: \"success\",\r\n        title: `成功修改該品項數量`,\r\n      });\r\n    }, 1500);\r\n  }\r\n}\r\n\r\n//productSelect 產品篩選\r\nfunction productSelectHandler() {\r\n  productSelect.addEventListener(\"change\", (e) => {\r\n    renderProductData(\r\n      product.filter((item) => {\r\n        return e.target.value === item.category\r\n          ? item\r\n          : e.target.value === \"全部\" && item;\r\n      })\r\n    );\r\n  });\r\n}\r\n\r\n//SweetAlert2\r\nconst Toast = Swal.mixin({\r\n  toast: true,\r\n  position: \"top-end\",\r\n  showConfirmButton: false,\r\n  timer: 1500,\r\n  timerProgressBar: true,\r\n  didOpen: (toast) => {\r\n    toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n    toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n  },\r\n});\r\n\r\n//錯誤彈跳\r\nfunction errorAlert(err) {\r\n  Swal.fire({\r\n    icon: \"error\",\r\n    title: `${err?.name}`,\r\n    text: `${err?.message}`,\r\n    showConfirmButton: true,\r\n  });\r\n}\r\n\r\n//按鈕disabled\r\nfunction disabledBtn(target) {\r\n  if (target.disabled) {\r\n    setTimeout(() => {\r\n      target.disabled = false;\r\n    }, 1500);\r\n  } else {\r\n    target.disabled = true;\r\n  }\r\n}\r\n\r\n//數字加逗點\r\nfunction money(num) {\r\n  //必須為字串\r\n  let str = num.toString().split(\".\");\r\n  return str[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\n//當商品數量等於一時，減號的按鈕鎖住\r\nfunction removeBtnHandler() {\r\n  document.querySelectorAll(\".remove\").forEach((item) => {\r\n    if (!(item.dataset.num * 1)) {\r\n      item.parentElement.setAttribute(\"disabled\", \"true\");\r\n    }\r\n  });\r\n}\r\n\r\n//顯示總金額\r\nfunction totalAmount(total) {\r\n  document.querySelector(\"#totalAmount\").textContent = `NT$${money(total)}`;\r\n}\r\n\r\nproductList?.addEventListener(\"click\", addCartItem); //產品列表監聽\r\ncartList?.addEventListener(\"click\", cartHandler); //購物車列表監聽\r\ndeleteAllBtn?.addEventListener(\"click\", deleteAllCartApi); //刪除全部按鈕監聽\r\n\n\n//# sourceURL=webpack://js-final/./src/scripts/controllers/cartController.js?");

/***/ }),

/***/ "./src/scripts/controllers/formController.js":
/*!***************************************************!*\
  !*** ./src/scripts/controllers/formController.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiPostOrder: () => (/* binding */ apiPostOrder),\n/* harmony export */   getValue: () => (/* binding */ getValue),\n/* harmony export */   submitBtnHandler: () => (/* binding */ submitBtnHandler)\n/* harmony export */ });\n/* harmony import */ var _cartController_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cartController.js */ \"./src/scripts/controllers/cartController.js\");\n\r\n\r\nconst apiPath = \"rocket14\";\r\nconst baseUrl = \"https://livejs-api.hexschool.io/api/livejs/v1\";\r\n\r\nconst customerName = document.querySelector(\"#customerName\");\r\nconst phone = document.querySelector(\"#phone\");\r\nconst email = document.querySelector(\"#email\");\r\nconst address = document.querySelector(\"#address\");\r\nconst paymentMethod = document.querySelector(\"#paymentMethod\");\r\nconst submitBtn = document.querySelector(\"#submitBtn\");\r\n\r\nlet submitData = {\r\n  data: {\r\n    user: {},\r\n  },\r\n};\r\n\r\n// 取得資料\r\nfunction getValue() {\r\n  submitData.data.user.name = customerName.value;\r\n  submitData.data.user.tel = phone.value;\r\n  submitData.data.user.email = email.value;\r\n  submitData.data.user.address = address.value;\r\n  submitData.data.user.payment = paymentMethod.value;\r\n}\r\n\r\n// 送出訂單API\r\nfunction apiPostOrder() {\r\n  axios\r\n    .post(`${baseUrl}/customer/${apiPath}/orders`, submitData)\r\n    .then((res) => {\r\n      submitSuccess();\r\n      (0,_cartController_js__WEBPACK_IMPORTED_MODULE_0__.getCartListApi)();\r\n      (0,_cartController_js__WEBPACK_IMPORTED_MODULE_0__.emptyCartblock)();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\n// 表單驗證\r\nconst form = document.querySelector(\"form\");\r\nconst inputs = document.querySelectorAll(\r\n  \"input[type=text], input[type=tel], input[type=email]\"\r\n);\r\n\r\nconst constraints = {\r\n  customerName: {\r\n    presence: true,\r\n  },\r\n  phone: {\r\n    presence: true,\r\n  },\r\n  email: {\r\n    presence: true,\r\n  },\r\n  address: {\r\n    presence: true,\r\n  },\r\n};\r\n\r\ninputs.forEach((item) => {\r\n  item.addEventListener(\"change\", () => {\r\n    item.nextElementSibling.textContent = \"\";\r\n  });\r\n});\r\n\r\nfunction submitBtnHandler() {\r\n  document.querySelector(\"#submitBtn\").addEventListener(\"click\", () => {\r\n    getValue();\r\n    apiPostOrder();\r\n  });\r\n}\r\n\r\nfunction checkValue() {\r\n  const errors = validate(form, constraints);\r\n  if (errors) {\r\n    Object.keys(errors).forEach((keys) => {\r\n      document.querySelector(`#${keys}Hint`).textContent = \"必填！\";\r\n    });\r\n  }\r\n  // 送出按鈕設置\r\n  if (!errors && _cartController_js__WEBPACK_IMPORTED_MODULE_0__.cartData.length > 0) {\r\n    submitBtn.removeAttribute(\"disabled\");\r\n  } else {\r\n    submitBtn.setAttribute(\"disabled\", \"true\");\r\n  }\r\n}\r\n\r\nfunction submitSuccess() {\r\n  customerName.value = \"\";\r\n  phone.value = \"\";\r\n  email.value = \"\";\r\n  address.value = \"\";\r\n\r\n  Swal.fire({\r\n    title: \"訂單送出成功\",\r\n    icon: \"success\",\r\n    confirmButtonText: \"關閉\",\r\n  });\r\n}\r\n\r\nwindow.addEventListener(\"click\", () => checkValue());\r\n\n\n//# sourceURL=webpack://js-final/./src/scripts/controllers/formController.js?");

/***/ }),

/***/ "./src/scripts/controllers/orderController.js":
/*!****************************************************!*\
  !*** ./src/scripts/controllers/orderController.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _conponents_tableItem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../conponents/tableItem.js */ \"./src/scripts/conponents/tableItem.js\");\n\r\n\r\nconst apiPath = \"rocket14\";\r\nconst baseUrl = `${\"https://livejs-api.hexschool.io/api/livejs/v1\"}/admin/${apiPath}/orders`;\r\n\r\nclass orderController {\r\n  constructor() {\r\n    // 事件元素\r\n    this.btnLogin = document.querySelector(\".btn-login\");\r\n    this.btnClear = document.querySelector(\".btn-clearOrders\");\r\n    this.btnBack = document.querySelector(\".btn-chartBack\");\r\n    this.tableElement = document.querySelector(\".table-order\");\r\n\r\n    this.btnLogin?.addEventListener(\"click\", () => this.orderInit());\r\n    this.btnClear?.addEventListener(\"click\", () => this.checkClearBtn());\r\n    this.tableElement?.addEventListener(\"click\", (e) =>\r\n      this.checkTableClick(e)\r\n    );\r\n\r\n    // 表格與提示區塊\r\n    this.loading = document.querySelector(\".loading\");\r\n    this.dashboard = document.querySelector(\".dashboard\");\r\n    this.hintNotLogin = document.querySelector(\".section-not-login\");\r\n    this.order = document.querySelector(\".section-order\");\r\n    this.orderList = document.querySelector(\".order-list\");\r\n    this.orderEmpty = document.querySelector(\".order-empty\");\r\n    this.orderData = [];\r\n  }\r\n  // 顯示讀取動畫\r\n  showLoading() {\r\n    this.loading.classList.remove(\"hidden\");\r\n    this.loading.classList.add(\"flex\");\r\n    this.dashboard.classList.add(\"blur-sm\");\r\n  }\r\n  // 關閉讀取動畫\r\n  disableLoading() {\r\n    this.loading.classList.remove(\"flex\");\r\n    this.loading.classList.add(\"hidden\");\r\n    this.dashboard.classList.remove(\"blur-sm\");\r\n  }\r\n  // 渲染表格\r\n  renderTable() {\r\n    if (!this.orderData.length) {\r\n      this.orderEmpty.classList.remove(\"hidden\");\r\n      this.orderList.classList.add(\"hidden\");\r\n      return;\r\n    }\r\n\r\n    this.orderEmpty.classList.add(\"hidden\");\r\n    this.orderList.classList.remove(\"hidden\");\r\n\r\n    this.orderData.sort((a, b) => a.createdAt - b.createdAt);\r\n\r\n    this.tableElement.innerHTML =\r\n      _conponents_tableItem_js__WEBPACK_IMPORTED_MODULE_0__.tableTitleHTML + this.orderData.map((item) => (0,_conponents_tableItem_js__WEBPACK_IMPORTED_MODULE_0__.TableItem)(item)).join(\"\");\r\n\r\n    this.showChart();\r\n  }\r\n  // 請求訂單列表\r\n  getOrder() {\r\n    this.showLoading();\r\n    axios\r\n      .get(baseUrl)\r\n      .then((res) => {\r\n        if (res.data.status) {\r\n          this.orderData = res.data.orders;\r\n          this.renderTable();\r\n          this.disableLoading();\r\n          return;\r\n        }\r\n        Swal.fire(\"讀取失敗\", \"讀取訂單時發生錯誤，請稍後再試 QQ\", \"error\");\r\n        this.disableLoading();\r\n      })\r\n      .catch(() => {\r\n        Swal.fire(\"讀取失敗\", \"讀取訂單時發生錯誤，請稍後再試 QQ\", \"error\");\r\n        this.disableLoading();\r\n      });\r\n  }\r\n  // 初始化\r\n  orderInit() {\r\n    Swal.fire({\r\n      title: \"請輸入通關密語\",\r\n      input: \"text\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"確認\",\r\n      cancelButtonText: \"取消\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed && this.checkPassword(result.value)) {\r\n        axios.defaults.headers.common[\"Authorization\"] =\r\n          \"97NYtTEy4GNDBv5W3taaYDYt2ff1\";\r\n\r\n        this.getOrder();\r\n        this.hintNotLogin.classList.add(\"hidden\");\r\n        this.order.classList.remove(\"hidden\");\r\n      }\r\n    });\r\n  }\r\n  // 判斷密碼是否合法\r\n  checkPassword(password) {\r\n    if (!password || password !== \"我是穎旻粉絲\") {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"輸入錯誤！\",\r\n        showConfirmButton: false,\r\n        timerProgressBar: true,\r\n        timer: 2000,\r\n      });\r\n      return false;\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: \"嗨嗨粉絲！^O^\",\r\n        showConfirmButton: false,\r\n        timerProgressBar: true,\r\n        timer: 2000,\r\n      });\r\n      return true;\r\n    }\r\n  }\r\n  // 監聽 table 點擊\r\n  checkTableClick(e) {\r\n    const isBtnToggle = e.target.classList.contains(\"btn-order-toggle\");\r\n    const isBtnDelete = e.target.classList.contains(\"btn-order-delete\");\r\n    const id = e.target.closest(\"tr\").getAttribute(\"data-id\");\r\n\r\n    if (isBtnToggle) this.putOrderPaidStatus(id, e.target.textContent);\r\n    if (isBtnDelete) {\r\n      Swal.fire({\r\n        title: \"注意\",\r\n        text: \"確定要刪除此筆訂單嗎 OAO？\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#d33\",\r\n        cancelButtonText: \"取消\",\r\n        confirmButtonText: \"確定刪除\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) this.deleteOrder(id);\r\n        return;\r\n      });\r\n    }\r\n  }\r\n  // 請求更改付款狀態\r\n  putOrderPaidStatus(id, statusText) {\r\n    this.showLoading();\r\n    const text = statusText.trim();\r\n    let status = false;\r\n\r\n    if (text === \"已處理\") status = true;\r\n    if (text === \"未處理\") status = false;\r\n\r\n    const reqData = { data: { id, paid: !status } };\r\n\r\n    axios\r\n      .put(baseUrl, reqData)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.orderData = res.data.orders;\r\n          this.renderTable();\r\n          this.disableLoading();\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: `更改成功`,\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n          return;\r\n        }\r\n        Swal.fire(\"更改失敗\", \"更改訂單時發生失敗，請稍後再試 QQ\", \"error\");\r\n        this.disableLoading();\r\n      })\r\n      .catch(() => {\r\n        Swal.fire(\"更改失敗\", \"更改訂單時發生失敗，請稍後再試 QQ\", \"error\");\r\n        this.disableLoading();\r\n      });\r\n  }\r\n  // 請求刪除單個訂單\r\n  deleteOrder(id) {\r\n    this.showLoading();\r\n\r\n    axios\r\n      .delete(`${baseUrl}/${id}`)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          this.orderData = res.data.orders;\r\n          this.renderTable();\r\n          this.disableLoading();\r\n          Swal.fire({\r\n            icon: \"success\",\r\n            title: `刪除成功`,\r\n            showConfirmButton: false,\r\n            timer: 1000,\r\n          });\r\n          return;\r\n        }\r\n        Swal.fire(\"刪除失敗\", \"刪除訂單時發生失敗，請稍後再試 QQ\", \"error\");\r\n        this.disableLoading();\r\n      })\r\n      .catch(() => {\r\n        Swal.fire(\"刪除失敗\", \"刪除訂單時發生失敗，請稍後再試 QQ\", \"error\");\r\n        this.disableLoading();\r\n      });\r\n  }\r\n  // 監聽清除按鈕\r\n  checkClearBtn() {\r\n    if (!this.orderData.length) {\r\n      Swal.fire(\"錯誤操作\", \"目前沒有任何訂單 =O=\", \"question\");\r\n      return;\r\n    }\r\n    Swal.fire({\r\n      title: \"注意\",\r\n      text: \"確定要刪除所有訂單嗎 OAO？\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#d33\",\r\n      cancelButtonText: \"取消\",\r\n      confirmButtonText: \"確定刪除\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) this.clearOrder();\r\n    });\r\n  }\r\n  // 請求清除全部訂單\r\n  clearOrder() {\r\n    axios\r\n      .delete(baseUrl)\r\n      .then((res) => {\r\n        if (res.data.status) {\r\n          Swal.fire(\"刪除成功!\", res.data.message, \"success\");\r\n          this.orderData = res.data.orders;\r\n          this.renderTable();\r\n          return;\r\n        }\r\n        Swal.fire(\"清除失敗\", \"清除全部訂單時發生失敗，請稍後再試 QQ\", \"error\");\r\n        this.disableLoading();\r\n      })\r\n      .catch(() => {\r\n        Swal.fire(\"清除失敗\", \"清除全部訂單時發生失敗，請稍後再試 QQ\", \"error\");\r\n        this.disableLoading();\r\n      });\r\n  }\r\n  // 生成圖表\r\n  createChart(rawData, chartName, event = () => {}) {\r\n    const data = Object.entries(rawData);\r\n    const mainColors = chartName === \"category\" && {\r\n      pattern: [\"#5434A7\", \"#9D7FEA\", \"#DACBFF\"],\r\n    };\r\n    const subColors = chartName === \"sub\" && {\r\n      pattern: [\"#301E5F\", \"#5434A7\", \"#9D7FEA\", \"#DACBFF\"],\r\n    };\r\n\r\n    return c3.generate({\r\n      bindto: \"#chart\",\r\n      data: {\r\n        type: \"pie\",\r\n        columns: data,\r\n        onclick: event,\r\n      },\r\n      size: {\r\n        width: 350,\r\n        height: 350,\r\n      },\r\n      padding: {\r\n        bottom: 32,\r\n      },\r\n      color: mainColors || subColors,\r\n    });\r\n  }\r\n  // 顯示圖表\r\n  showChart() {\r\n    const { categoryData, subData } = this.transformOrderData(this.orderData);\r\n    const showSubData = (id) => {\r\n      this.createChart(subData[id], \"sub\");\r\n\r\n      this.btnBack.classList.remove(\"hidden\");\r\n\r\n      this.btnBack.addEventListener(\"click\", () => {\r\n        this.btnBack.classList.add(\"hidden\");\r\n        this.createChart(categoryData, \"category\", (d) => showSubData(d.id));\r\n      });\r\n    };\r\n\r\n    this.createChart(categoryData, \"category\", (d) => showSubData(d.id));\r\n  }\r\n  // 資料轉換\r\n  transformOrderData(data) {\r\n    const productsData = data.map((item) => item.products);\r\n    const categoryData = {};\r\n    const subData = {};\r\n\r\n    productsData.forEach((arr) => {\r\n      arr.forEach((item) => {\r\n        const { category, title, price, quantity } = item;\r\n        const totalPrice = price * quantity;\r\n\r\n        if (!categoryData[category]) {\r\n          categoryData[category] = totalPrice;\r\n        } else {\r\n          categoryData[category] += totalPrice;\r\n        }\r\n\r\n        if (!subData[category]) {\r\n          subData[category] = { [title]: totalPrice };\r\n        } else if (!subData[category][title]) {\r\n          subData[category][title] = totalPrice;\r\n        } else {\r\n          subData[category][title] += totalPrice;\r\n        }\r\n      });\r\n    });\r\n\r\n    return { categoryData, subData };\r\n  }\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (orderController);\r\n\n\n//# sourceURL=webpack://js-final/./src/scripts/controllers/orderController.js?");

/***/ }),

/***/ "./src/scripts/main.js":
/*!*****************************!*\
  !*** ./src/scripts/main.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _controllers_orderController_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./controllers/orderController.js */ \"./src/scripts/controllers/orderController.js\");\n/* harmony import */ var _controllers_cartController_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./controllers/cartController.js */ \"./src/scripts/controllers/cartController.js\");\n/* harmony import */ var _controllers_formController_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./controllers/formController.js */ \"./src/scripts/controllers/formController.js\");\n\r\n\r\n\r\n\r\n// 導覽列快速定位\r\n(() => {\r\n  const links = document.querySelector(\"#links\");\r\n\r\n  links?.addEventListener(\"click\", (e) => {\r\n    if (e.target.id !== \"link-dashboard\") e.preventDefault();\r\n\r\n    const id = e.target.id;\r\n    const target = document.querySelector(id.replace(\"link-\", \"#\"));\r\n\r\n    if (target) {\r\n      target.scrollIntoView({ block: \"start\" });\r\n      window.scrollBy(0, -150);\r\n    }\r\n  });\r\n})();\r\n\r\n// 好評推薦區塊 拖曳功能\r\nconst list = document.querySelector(\".recommendation_wall\");\r\nif (list) {\r\n  let startX = 0;\r\n  let startScroll = 0;\r\n  let moved = false;\r\n\r\n  function startDrag(e) {\r\n    list.classList.add(\"active\");\r\n    startX = e.pageX;\r\n    startScroll = list.scrollLeft;\r\n    moved = false;\r\n  }\r\n  function dragHandler(e) {\r\n    e.preventDefault();\r\n    if (list.classList.contains(\"active\")) {\r\n      moved = true;\r\n      let move = e.pageX - startX;\r\n      list.scrollLeft = startScroll - move * 2;\r\n    }\r\n  }\r\n  function stopDrag(e) {\r\n    list.classList.remove(\"active\");\r\n  }\r\n\r\n  list.addEventListener(\"mousedown\", startDrag); //touchstart\r\n  list.addEventListener(\"mousemove\", dragHandler); //touchmove\r\n  list.addEventListener(\"mouseup\", stopDrag); //touchend\r\n  list.addEventListener(\"mouseleave\", stopDrag);\r\n}\r\n\r\n//產品列表區及購物車列表區\r\nconst productList = document.querySelector(\".productList\");\r\nif (productList) {\r\n  (0,_controllers_cartController_js__WEBPACK_IMPORTED_MODULE_1__.init)();\r\n}\r\n\r\n//產品篩選區\r\nconst productSelect = document.querySelector(\".productSelect\");\r\nif (productSelect) {\r\n  (0,_controllers_cartController_js__WEBPACK_IMPORTED_MODULE_1__.productSelectHandler)();\r\n}\r\n\r\n// 刪除購物車品項\r\nconst cartSection = document.querySelector(\"#cartSection\");\r\nif (cartSection) {\r\n  cartSection.addEventListener(\"click\", (e) => {\r\n    if (e.target.id === \"delectItem\") {\r\n      delectProduct(e.target);\r\n    }\r\n    if (e.target.id === \"delectAll\") {\r\n      delectAllProduct();\r\n    }\r\n  });\r\n}\r\n\r\n// 送出訂單按鈕\r\nconst submitBtn = document.querySelector(\"#submitBtn\");\r\nif (submitBtn) {\r\n  (0,_controllers_formController_js__WEBPACK_IMPORTED_MODULE_2__.submitBtnHandler)();\r\n}\r\n\r\n// 後台管理區塊\r\nconst dashboard = document.querySelector(\".dashboard\");\r\nif (dashboard) {\r\n  new _controllers_orderController_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n}\r\n\n\n//# sourceURL=webpack://js-final/./src/scripts/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/scripts/main.js");
/******/ 	
/******/ })()
;